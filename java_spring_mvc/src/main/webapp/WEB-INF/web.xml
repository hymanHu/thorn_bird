<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>Java Spring Mvc Application</display-name>

	<!-- welcome page -->
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- servlet 上下文 -->
	<!-- 指定 spring 配置文件，启动 spring 容器 -->
	<context-param>
		<!-- 启动容器就会加载此处配置的配置文件  
			 第一种写法，配置文件放在 src/main/resources 下  
			第二种写法，配置文件放在 /WEB-INF/conf/spring 下
         -->
		<param-name>contextConfigLocation</param-name>
        <param-value>classpath:config/applicationContext.xml</param-value>
        <!-- <param-value>/WEB-INF/config/applicationContext.xml</param-value> -->
	</context-param>
	<!-- 指定log4j配置文件 -->
	<context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>classpath:config/log4j.xml</param-value>
    </context-param>
	
	<!-- listener -->
	<!-- Log4j监听器 -->
	<listener>
		<listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
	</listener>
	<!-- spring 监听器：启动 Web 容器时，自动装配 ApplicationContext 的配置信息 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- filter -->
    <!-- Log4j过滤器 -->
    <filter>
		<filter-name>log4jServletFilter</filter-name>
		<filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>log4jServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
    <!-- 字符过滤器 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 解决 PUT 请求无法提交表单数据的问题 -->
	<filter>
	   <filter-name>httpMethodFilter</filter-name>
	   <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
	   <filter-name>httpMethodFilter</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 解决 Form 表单不支持 Put、Delete 请求问题，页面使用  _method 隐藏域指定真正的请求类型 -->
	<filter>
	   <filter-name>hiddenHttpMethodFilter</filter-name>
	   <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
	   <filter-name>hiddenHttpMethodFilter</filter-name>
	   <!-- 绑定 DispatcherServlet -->
	   <servlet-name>springMVC</servlet-name>
	</filter-mapping>
	<!-- 自定义 authFilter 过滤器 -->
	<filter>
	   <filter-name>authFilter</filter-name>
	   <!-- <filter-class>com.sfac.springMvc.filter.AuthFilter</filter-class> -->
	   <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
	   <filter-name>authFilter</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- shiro过滤器 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    
    <!-- servlet -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:config/springMvcConfig.xml</param-value>
        </init-param>
        <!-- 值大于等于0表示容器启动应用时候加载该servlet，数值越小优先级越高 -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>
