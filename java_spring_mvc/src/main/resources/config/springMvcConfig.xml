<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:context="http://www.springframework.org/schema/context"   
       xmlns:mvc="http://www.springframework.org/schema/mvc"   
       xmlns:p="http://www.springframework.org/schema/p"   
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
       xmlns:beans="http://www.springframework.org/schema/beans"   
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
        
	<!-- 扫描构造型（stereotype）注解所标注的类，@Component、@Repository、@Service、@Controller 等 -->
	<context:component-scan base-package="com.sfac.springMvc" use-default-filters="false">
		<!-- 设置白名单，只扫描 Controller -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 启用注解驱动：将扫描到的组件注册到工厂中，来处理请求；
		Spring 3.0.x 新增配置，其中最主要的两个类：DefaultAnnotationHandlerMapping 和 AnnotationMethodHandlerAdapter，
		分别为 HandlerMapping 的实现类和 HandlerAdapter 的实现类，
		从 3.1.x 版本开始对应实现类改为了 RequestMappingHandlerMapping 和 RequestMappingHandlerAdapter；
		RequestMappingHandlerMapping：处理 @RequestMapping 注解，并将其注册到请求映射表中；
		RequestMappingHandlerAdapter：处理请求的适配器，确定调用哪个类的哪个方法；
	-->
	<mvc:annotation-driven />
    
	<!-- 处理静态资源方式一 
		Spring 3.0.x 新增 REST 风格，URL 不希望带 .html 或 .do 等后缀，所以在 web.xml 中配置 DispatcherServlet 的请求映射为 /，
		Spring MVC 将捕获 Web 容器所有的请求，包括静态资源的请求，但静态资源没有处理器，因此会报错；
		该配置会在 Spring MVC 上下文中定义一个 DefaultServletHttpRequestHandler，它会像一个检查员，
		对进入 DispatcherServlet 的 URL 进行筛查，如果是静态资源的请求，就将该请求转由 Web 应用服务器默认的 Servlet 处理，
		如果不是静态资源的请求，才由 DispatcherServlet 继续处理；
		一般 Web 应用服务器默认的 Servlet 名称是 "default"，因此 DefaultServletHttpRequestHandler 可以找到它，
		如果你所有的 Web 应用服务器的默认 Servlet 名称不是 "default"，则需要通过 default-servlet-name 属性显示指定；
		访问路径：http://127.0.0.1:8080/java_spring_mvc/static/js/custom.js
	-->
	<mvc:default-servlet-handler />
	
	<!-- 处理静态资源方式二
		该配置在处理静态资源上更进一步，由 Spring MVC 框架自己处理静态资源；
		location：从 webapp 根目录开始算起的路径；
		访问路径：http://127.0.0.1:8080/java_spring_mvc/js/custom.js
	-->
	<!-- <mvc:resources location="/static/" mapping="/**"></mvc:resources> -->
	
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"   
		p:prefix="/WEB-INF/templates/" p:suffix=".jsp"></bean>
</beans>